apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/name: {{ $.Chart.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
spec:
  replicas: {{ $.Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $.Chart.Name }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $.Chart.Name }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: {{ $.Release.Name }}
      containers:
        - name: app
          image: "{{ $.Values.image.registry }}/{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: api
              containerPort: 3001
          env:
          {{- range $key, $val := $.Values.app.envVars }}
            - name: {{ $key }}
              value: {{ $val | quote }}
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ $.Release.Name }}-secrets
          {{- if $.Values.resources.enabled }}
          resources: {{- omit $.Values.resources "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if $.Values.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ $.Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ $.Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ $.Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ $.Values.readinessProbe.failureThreshold }}
            successThreshold: {{ $.Values.readinessProbe.successThreshold }}
            httpGet:
              path: /probe/ready
              port: api
          {{- end }}
          {{- if $.Values.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ $.Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ $.Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ $.Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ $.Values.livenessProbe.failureThreshold }}
            successThreshold: {{ $.Values.livenessProbe.successThreshold }}
            httpGet:
              path: /probe/liveness
              port: api
          {{- end }}
          {{- if $.Values.startupProbe.enabled }}
          startupProbe:
            initialDelaySeconds: {{ $.Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ $.Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ $.Values.startupProbe.timeoutSeconds }}
            failureThreshold: {{ $.Values.startupProbe.failureThreshold }}
            successThreshold: {{ $.Values.startupProbe.successThreshold }}
            httpGet:
              path: /probe/ready
              port: api
          {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: {{ $.Chart.Name }}
                    app.kubernetes.io/instance: {{ $.Release.Name }}
                topologyKey: kubernetes.io/hostname
